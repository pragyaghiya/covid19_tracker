{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/date_util.js","webpack:///./src/scripts/country_bar_chart.js","webpack:///./src/scripts/horz_bar_graph.js","webpack:///./src/scripts/data_manipulation.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getYesterdaysDate","dateObj","Date","setDate","getDate","day","getMonth","getYear","toString","slice","getTwoDaysAgoDate","date","length","month","year","thousands_separators","num","num_parts","split","replace","join","makeCountryBarChart","countryName","countryData","excludeChina","countryArr","calendarInput","document","getElementById","countriesButton","chinaCheckbox","chinaCheckboxLabel","graphTitle","checkboxOutline","getElementsByClassName","tooltips","index","remove","checked","setAttribute","innerHTML","d3","selectAll","filteredCountryArr","filter","provinceState","provinceStateCases","sort","a","b","adjustedTotalCases","provinceStateDeaths","provinceStateRecoveries","assign","series","stack","keys","map","forEach","v","idx","maxValue","max","margin","xScale","scaleLinear","domain","range","yScale","scaleBand","padding","sumCases","sumAdjustedCases","sumDeaths","sumRecoveries","provinceStateAdjustedCases","svg","select","attr","chart","append","tooltip","style","y_axisLength","text","data","bandwidth","on","msg","event","pageY","pageX","window","location","search","generateData","g","axisTop","ticks","w","axisLeft","tickSizeOuter","makeHorzBarGraph","keysWithoutColumn","valuesWithoutColumn","values","totalCases","totalRecoveries","totalDeaths","country","casesMinusDeathsAndRecoveries","alert","blacklist","dataMaster","csv","then","row","rowCountryRegion","includes","provinceStateObj","parseInt","push","undefined","provinceStateArr","paramCountry","indexOf","addEventListener","card","createElement","classList","add","body","checkbox","yesterday","handleClick","defaultValue","getYesterdaysDateDefault","twoDaysAgo","getTwoDaysAgoDateDefault","calendar","handleCalendar"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const getYesterdaysDate = () => {\n    // if the today's date is '1'\n    // create a date object using Date constructor \n    var dateObj = new Date();\n\n    // subtract one day from current time                           \n    dateObj.setDate(dateObj.getDate() - 1);\n\n    let day = dateObj.getDate();\n    let month = dateObj.getMonth() + 1;\n    let year = (dateObj.getYear() + 1900).toString().slice(2, 4);\n    return month + \"/\" + day + \"/\" + year;\n}\n\nexport const getTwoDaysAgoDate = () => {\n    // if the today's date is '1'\n    // create a date object using Date constructor \n    var dateObj = new Date();\n\n    // subtract one day from current time                           \n    dateObj.setDate(dateObj.getDate() - 2);\n\n    let day = dateObj.getDate();\n    let month = dateObj.getMonth() + 1;\n    let year = (dateObj.getYear() + 1900).toString().slice(2, 4);\n    return month + \"/\" + day + \"/\" + year;\n}\n\nexport const getYesterdaysDateDefault = () => {\n    var dateObj = new Date();                           \n    dateObj.setDate(dateObj.getDate() - 1);\n\n    let day = dateObj.getDate();\n    let month = dateObj.getMonth() + 1;\n    if (day.toString().length === 1) {\n        day = \"0\" + day;\n    }\n    if (month.toString().length === 1) {\n        month = \"0\" + month;\n    }\n\n    let year = (dateObj.getYear() + 1900).toString();\n    return year + \"-\" + month + \"-\" + day;\n}\n\nexport const getTwoDaysAgoDateDefault = () => {\n    var dateObj = new Date();                           \n    dateObj.setDate(dateObj.getDate() - 2);\n\n    let day = dateObj.getDate();\n    let month = dateObj.getMonth() + 1;\n    if (day.toString().length === 1) {\n        day = \"0\" + day;\n    }\n    if (month.toString().length === 1) {\n        month = \"0\" + month;\n    }\n\n    let year = (dateObj.getYear() + 1900).toString();\n    return year + \"-\" + month + \"-\" + day;\n}\n\nexport const getDate = (date = null) => {\n    // note: earliest date in data: \"1/22/20\"\n\n    if (date.length === 0) {\n        return getYesterdaysDate();\n    }\n\n    if (date) {\n        //date format: string \"2020-03-10\"\n        let month = date.slice(5, 7);\n        if (month.length === 2) {\n            //account for 2 digit with one zero like \"2020-03-03\"\n            month = month[1];\n        }\n        let day = date.slice(8, 10);\n        if (day.length === 2 && day[0] === \"0\") {\n            //account for 2 digit with one zero like \"2020-03-03\"\n            day = day[1];\n        }\n        let year = date.slice(2, 4);\n        return month + \"/\" + day + \"/\" + year;\n    } else {\n        getYesterdaysDate()\n    }\n}\n\nexport const thousands_separators = (num) => {\n    var num_parts = num.toString().split(\".\");\n    num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return num_parts.join(\".\");\n}","import {generateData} from './data_manipulation';\nimport { getDate, thousands_separators} from './date_util';\n\nexport const makeCountryBarChart = (countryName, countryData) => {\n    let countryArr = countryData;\n    // calendarInput and countriesButton below are used as arguments later on when rendering all countries graph again\n    const calendarInput = document.getElementById(\"calendarInput\");\n    const countriesButton = document.getElementById(\"backToCountries\")\n    const chinaCheckbox = document.getElementById(\"chinaCheckbox\"); \n    const chinaCheckboxLabel = document.getElementById(\"chinaCheckboxLabel\"); \n    const countryDateInput = document.getElementById(\"calendarInputCountry\");\n    const graphTitle = document.getElementById(\"graphTitle\");\n    const checkboxOutline = document.getElementsByClassName(\"toggle\");\n\n    //ensure tooltips don't persist in buggy way\n    const tooltips = document.getElementsByClassName(\"tooltip\");\n    for (let index = 0; index < tooltips.length; index++) {\n        tooltips[index].remove();\n    }\n\n    let excludeChina;\n    if (chinaCheckbox.checked) {\n        excludeChina = true;\n    } else {\n        excludeChina = false;\n    }\n\n    if (checkboxOutline[0]) {\n        checkboxOutline[0].setAttribute(\"class\", \"hide\");\n    }\n    chinaCheckbox.setAttribute(\"class\", \"hide\");\n    chinaCheckboxLabel.setAttribute(\"class\", \"hide\");\n    countriesButton.setAttribute(\"class\", \"show\");\n    graphTitle.innerHTML = countryName;\n    // countryDateInput.setAttribute(\"class\", \"show\");\n    // calendarInput.setAttribute(\"class\", \"hide\");\n\n    // countryDateInput.value = calendarInput.value;\n\n\n        // render new country graph\n        \n        // remove all bars related to all countries\n        d3.selectAll(\"g\").remove();\n\n        //remove any provinces with less than 5 cases to avoid overcrowding the graph\n        let filteredCountryArr = countryArr.filter(provinceState => provinceState.provinceStateCases > 10);\n        \n        // sort provinces by total number of cases, descending\n        filteredCountryArr.sort((a, b) => (a.provinceStateCases < b.provinceStateCases ? 1 : -1));\n\n        //add a value of cases - (deaths + recoveries).  Called adjustedTotalCases\n        for (let index = 0; index < filteredCountryArr.length; index++) {\n            let adjustedTotalCases = filteredCountryArr[index].provinceStateCases - (filteredCountryArr[index].provinceStateDeaths + filteredCountryArr[index].provinceStateRecoveries);\n            Object.assign(filteredCountryArr[index], { \"provinceStateAdjustedCases\": adjustedTotalCases});       \n        }\n\n        // {provinceState: \"Henan\", provinceStateCases: 1273, provinceStateDeaths: 22, provinceStateRecoveries: 1250}\n        let series = d3.stack()\n            .keys([\"provinceStateAdjustedCases\", \"provinceStateRecoveries\",\"provinceStateDeaths\"])\n            (filteredCountryArr)\n            .map(d =>\n                (d.forEach((v, idx) => {\n                    v.key = d.key;\n                    v.idx = idx;\n                }\n                ), d)\n            )\n\n\n        // get the highest value\n        var maxValue = d3.max(filteredCountryArr, function (d) {\n            return +d.provinceStateCases;\n        });\n\n        // Width and height of SVG \n        var w = 1400;\n        var h = 1200;\n        let margin = ({ top: 30, right: 10, bottom: 10, left: 150 });\n\n        //Width and height of graph itself within SVG\n        var x_axisLength = 1200;\n        // change y_axisLength to be smaller than h to hide bars with low values\n        var y_axisLength = 1200;\n\n        var xScale = d3.scaleLinear()\n            .domain([0, maxValue])\n            .range([0, x_axisLength])\n\n        var yScale = d3.scaleBand()\n            .domain(filteredCountryArr.map((provinceState) => provinceState[\"provinceState\"]))\n            .range([margin.top, y_axisLength - margin.bottom])\n            .padding(0.1)\n\n\n        // get sum of cases for the country\n                // {provinceState: \"Henan\", provinceStateCases: 1273, provinceStateDeaths: 22, provinceStateRecoveries: 1250}\n        let sumCases = 0;\n        let sumAdjustedCases = 0;\n        let sumDeaths = 0;\n        let sumRecoveries = 0;\n        for (let index = 0; index < filteredCountryArr.length; index++) {\n            sumCases += filteredCountryArr[index].provinceStateCases;\n            sumAdjustedCases += filteredCountryArr[index].provinceStateAdjustedCases;\n            sumDeaths += filteredCountryArr[index].provinceStateDeaths;\n            sumRecoveries += filteredCountryArr[index].provinceStateRecoveries;\n        }\n\n    \n \n        var svg = d3.select(\"#horzBarChart\")\n            .attr(\"width\", w)\n            .attr(\"height\", h)\n\n        const chart = svg.append('g');\n\n    var totalCases = chart.append(\"text\")\n        .attr(\"class\", \"totalCases\")\n        .style(\"font-family\", \"'Open Sans', sans-serif\")\n        .style(\"color\", \"green\")\n        .style(\"font-size\", \"22px\")\n        .style(\"z-index\", \"10\")\n        .style(\"font-weight\", \"bold\")\n        .attr(\"x\", () => {\n            return x_axisLength - margin.right - 200\n        })\n        .attr(\"y\", () => {\n            return y_axisLength / 4\n        })\n        .text(() => {\n            return `Total Reported Cases: ${thousands_separators(sumCases)}`\n        })\n\n    var totalAdjustedCount = chart.append(\"text\")\n        .attr(\"class\", \"totalAdjustedCount\")\n        .style(\"font-family\", \"'Open Sans', sans-serif\")\n        .style(\"color\", \"black\")\n        .style(\"font-size\", \"18px\")\n        .style(\"z-index\", \"10\")\n        .attr(\"x\", () => {\n            return x_axisLength - margin.right - 200\n        })\n        .attr(\"y\", () => {\n            return y_axisLength / 4 + 40\n        })\n        .text(() => {\n            return `Unresolved Reported Cases: ${thousands_separators(sumAdjustedCases)}`\n        })\n\n    var totalRecoveries = chart.append(\"text\")\n        .attr(\"class\", \"totalRecoveries\")\n        .style(\"font-family\", \"'Open Sans', sans-serif\")\n        .style(\"color\", \"black\")\n        .style(\"font-size\", \"18px\")\n        .style(\"z-index\", \"10\")\n        .attr(\"x\", () => {\n            return x_axisLength - margin.right - 200\n        })\n        .attr(\"y\", () => {\n            return y_axisLength / 4 + 60\n        })\n        .text(() => {\n            return `Reported Recoveries: ${thousands_separators(sumRecoveries)}`\n        })\n\n    var totalDeaths = chart.append(\"text\")\n        .attr(\"class\", \"totalDeaths\")\n        .style(\"font-family\", \"'Open Sans', sans-serif\")\n        .style(\"color\", \"black\")\n        .style(\"font-size\", \"18px\")\n        .style(\"z-index\", \"10\")\n        .attr(\"x\", () => {\n            return x_axisLength - margin.right - 200\n        })\n        .attr(\"y\", () => {\n            return y_axisLength / 4 + 80\n        })\n        .text(() => {\n            return `Reported Deaths: ${thousands_separators(sumDeaths)}`\n        })\n\n        var tooltip = d3.select(\"body\")\n            .append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"position\", \"absolute\")\n            .style(\"font-family\", \"'Open Sans', sans-serif\")\n            .style(\"color\", \"gray\")\n            .style(\"font-size\", \"14px\")\n            .style(\"z-index\", \"10\")\n            .style(\"visibility\", \"hidden\");\n\n        chart.append(\"g\")\n            .selectAll(\"g\")\n            .data(series)\n            .join(\"g\")\n            .selectAll(\"rect\")\n            .data(d => d)\n            .join(\"rect\")\n                .attr(\"x\", function(d) {\n                    return xScale(d[0]) + margin.left\n                })\n                .attr(\"y\", function(d) {\n                    return yScale(d.data.provinceState)\n                })\n                .attr(\"width\", function(d) {\n                    return xScale(d[1]) - xScale(d[0]); \n                })\n                .attr(\"height\", yScale.bandwidth())\n            .attr(\"fill\", function (d) {\n                if (d.key === \"provinceStateDeaths\") {\n                    return \"#bf212e\";\n                } else if (d.key === \"provinceStateRecoveries\") {\n                    return \"#27b376\";\n                } else {\n                    return \"#264b96\"\n                }\n            })\n            .on(\"mouseover\", function (d) {\n                let msg = \"\";\n                if (d.key === \"provinceStateAdjustedCases\") {\n                    msg = \"Unresolved Reported Cases\";\n                } else if (d.key === \"provinceStateDeaths\") {\n                    msg = \"Reported Deaths\";\n                } else if (d.key === \"provinceStateRecoveries\") {\n                    msg = \"Reported Recoveries\"\n                }\n                return tooltip.style(\"visibility\", \"visible\").text(`${msg}: ${d.data[d.key]}`)\n            })\n            .on(\"mousemove\", function (d) {\n                let msg = \"\";\n                if (d.key === \"provinceStateAdjustedCases\") {\n                    msg = \"Unresolved Reported Cases\";\n                } else if (d.key === \"provinceStateDeaths\") {\n                    msg = \"Reported Deaths\";\n                } else if (d.key === \"provinceStateRecoveries\") {\n                    msg = \"Reported Recoveries\"\n                }\n                return tooltip.style(\"top\", (d3.event.pageY - 10) + \"px\").style(\"left\", (d3.event.pageX + 10) + \"px\").text(`${msg}: ${thousands_separators(d.data[d.key])}`);\n            })\n            .on(\"mouseout\", function (d) {\n                return tooltip.style(\"visibility\", \"hidden\");\n            })\n            .on(\"click\", function (d) {\n                // this resets the URL path\n                window.location.search = \"\";\n\n                tooltip.style(\"visibility\", \"hidden\");\n                generateData(excludeChina, getDate(calendarInput.value));\n            })\n\n        // might need to refactor this\n        let xAxis = g => g\n            .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n            .call(d3.axisTop(xScale).ticks(w / 100, \"s\"))\n            .call(g => g.selectAll(\".domain\").remove())\n\n        svg.append(\"g\")\n            .call(xAxis);\n\n        let yAxis = g => g\n            .attr(\"transform\", `translate(${margin.left}, 0)`)\n            .call(d3.axisLeft(yScale).tickSizeOuter(0))\n            .call(g => g.selectAll(\".domain\").remove())\n\n        svg.append(\"g\")\n            .call(yAxis);\n}","// modeled on: https://observablehq.com/@d3/stacked-horizontal-bar-chart\n\nimport { makeCountryBarChart} from \"./country_bar_chart\";\nimport { thousands_separators} from \"./date_util\";\n\n// data\n    //  {\n    // Mainland China: {Province/State: Array(31), totalCases: 80026, totalDeaths: 2912, totalRecoveries: 44810}\n    // Thailand: { Province / State: Array(1), totalCases: 43, totalDeaths: 1, totalRecoveries: 31 }\n    // Japan: { Province / State: Array(1), totalCases: 274, totalDeaths: 6, totalRecoveries: 32 }\n    // ...\n    //  }\n\nexport const makeHorzBarGraph = (data, excludeChina) => {\n    if (excludeChina) {\n        delete data[\"China\"];\n    }\n\n    const countriesButton = document.getElementById(\"backToCountries\")\n    const chinaCheckbox = document.getElementById(\"chinaCheckbox\"); \n    const chinaCheckboxLabel = document.getElementById(\"chinaCheckboxLabel\"); \n    const tooltips = document.getElementsByClassName(\"tooltip\");\n    const graphTitle = document.getElementById(\"graphTitle\");\n\n    // make sure that tooltips don't persist in buggy way\n    for (let index = 0; index < tooltips.length; index++) {\n        tooltips[index].remove();\n    }\n\n    // if any bars were there before, remove them\n    d3.selectAll(\"g\").remove();\n    countriesButton.setAttribute(\"class\", \"hide\");\n    // countryDateInput.setAttribute(\"class\", \"hide\");\n\n\n    chinaCheckbox.setAttribute(\"class\", \"show\");\n    chinaCheckboxLabel.setAttribute(\"class\", \"show\");\n    // calendarInput.setAttribute(\"class\", \"show\");\n    \n    graphTitle.innerHTML = \"Global\";\n\n    \n\n    let keysWithoutColumn = Object.keys(data).slice(0, -1);\n    let valuesWithoutColumn = Object.values(data).slice(0, -1);\n\n    for (let index = 0; index < valuesWithoutColumn.length; index++) {\n        // avoid double counting cases with adjustedCases\n        let adjustedTotalCases = valuesWithoutColumn[index].totalCases - (valuesWithoutColumn[index].totalRecoveries + valuesWithoutColumn[index].totalDeaths);\n        Object.assign(valuesWithoutColumn[index], { \"Country/Region\": keysWithoutColumn[index], \"casesMinusDeathsAndRecoveries\": adjustedTotalCases});\n    }\n\n    //sort by number of total cases so the bar graph shows up as expected\n    valuesWithoutColumn.sort((a, b) => (a.totalCases < b.totalCases ? 1 : -1));\n\n    // reduce the number of countries shown to the top 100 with highest cases\n    valuesWithoutColumn = valuesWithoutColumn.slice(0, 50);\n    keysWithoutColumn = keysWithoutColumn.slice(0, 50);\n\n    \n        // numCountries to be used to set height of svg\n        // var numCountries = valuesWithoutColumn.length;\n\n        // China's numbers skews the numbers majorly since it is MUCH larger than other countries in February 2020. This boolean simply removes it\n        var maxValue = d3.max(valuesWithoutColumn, function(d) {\n            return +d.totalCases;\n        })\n\n\n    //the order of the stacks for each country is determined by the order of .keys\n    let series = d3.stack()\n        .keys([\"casesMinusDeathsAndRecoveries\", \"totalRecoveries\", \"totalDeaths\"])\n        (valuesWithoutColumn)\n        .map(d =>\n            (d.forEach((v, idx) => {\n                v.key = d.key;\n                v.idx = idx;\n            }\n            ), d)\n        )\n\n\n    // Width and height of SVG \n    var w = 1400;\n    var h = 1800;\n    let margin = ({ top: 30, right: 10, bottom: 10, left: 150 });\n\n    //Width and height of graph itself within SVG\n    var x_axisLength = 1200;\n    // change y_axisLength to be smaller than h to hide bars with low values\n    var y_axisLength = 1800;\n            \n        var svg = d3.select(\"#horzBarChart\")\n                .attr(\"width\", w)\n                .attr(\"height\", h)\n        \n        const chart = svg.append('g')\n\n        var xScale = d3.scaleLinear()\n            .domain([0, maxValue])\n            .range([0, x_axisLength])\n\n        var yScale = d3.scaleBand()\n            .domain(valuesWithoutColumn.map((country) => country[\"Country/Region\"]))\n            .range([margin.top, y_axisLength - margin.bottom])\n            .padding(0.1)\n\n        // sum total cases across all 50 countries shown\n        let sumCases = 0;\n        let sumAdjustedCases = 0;\n        let sumDeaths = 0;\n        let sumRecoveries = 0;\n        for (let index = 0; index < valuesWithoutColumn.length; index++) {\n            sumCases += valuesWithoutColumn[index].totalCases;\n            sumAdjustedCases += valuesWithoutColumn[index].casesMinusDeathsAndRecoveries;\n            sumDeaths += valuesWithoutColumn[index].totalDeaths;\n            sumRecoveries += valuesWithoutColumn[index].totalRecoveries;\n        }\n\n        var tooltip = d3.select(\"body\")\n            .append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"position\", \"absolute\")\n            .style(\"font-family\", \"'Open Sans', sans-serif\")\n            .style(\"color\", \"gray\")\n            .style(\"font-size\", \"14px\")\n            .style(\"z-index\", \"1\")\n            .style(\"visibility\", \"hidden\");\n\n        var totalCases = chart.append(\"text\")\n            .attr(\"class\", \"totalCases\")\n            .style(\"font-family\", \"'Open Sans', sans-serif\")\n            .style(\"color\", \"green\")\n            .style(\"font-size\", \"22px\")\n            .style(\"z-index\", \"10\")\n            .style(\"font-weight\", \"bold\")\n            .attr(\"x\", () => {\n                return x_axisLength - margin.right - 200\n            })\n            .attr(\"y\", () => {\n                return y_axisLength/4\n            })\n            .text(() => {\n                return `Total Reported Cases: ${thousands_separators(sumCases)}`\n            })\n\n        var totalAdjustedCount = chart.append(\"text\")\n            .attr(\"class\", \"totalAdjustedCount\")\n            .style(\"font-family\", \"'Open Sans', sans-serif\")\n            .style(\"color\", \"black\")\n            .style(\"font-size\", \"18px\")\n            .style(\"z-index\", \"10\")\n            .attr(\"x\", () => {\n                return x_axisLength - margin.right - 200\n            })\n            .attr(\"y\", () => {\n                return y_axisLength / 4 + 40\n            })\n            .text(() => {\n                return `Unresolved Reported Cases: ${thousands_separators(sumAdjustedCases)}`\n            })\n\n        var totalRecoveries = chart.append(\"text\")\n            .attr(\"class\", \"totalRecoveries\")\n            .style(\"font-family\", \"'Open Sans', sans-serif\")\n            .style(\"color\", \"black\")\n            .style(\"font-size\", \"18px\")\n            .style(\"z-index\", \"10\")\n            .attr(\"x\", () => {\n                return x_axisLength - margin.right - 200\n            })\n            .attr(\"y\", () => {\n                return y_axisLength / 4 + 60\n            })\n            .text(() => {\n                return `Reported Recoveries: ${thousands_separators(sumRecoveries)}`\n            })\n\n        var totalDeaths = chart.append(\"text\")\n            .attr(\"class\", \"totalDeaths\")\n            .style(\"font-family\", \"'Open Sans', sans-serif\")\n            .style(\"color\", \"black\")\n            .style(\"font-size\", \"18px\")\n            .style(\"z-index\", \"10\")\n            .attr(\"x\", () => {\n                return x_axisLength - margin.right - 200\n            })\n            .attr(\"y\", () => {\n                return y_axisLength / 4 + 80\n            })\n            .text(() => {\n                return `Reported Deaths: ${thousands_separators(sumDeaths)}`\n            })\n\n        chart.append(\"g\")\n            .selectAll(\"g\")\n            .data(series)\n            .join(\"g\")\n            .selectAll(\"rect\")\n            // need to loop through series (array of length 3)\n            .data(d => d)\n            .join(\"rect\")\n                .attr(\"x\", function(d) {\n                    return xScale(d[0]) + margin.left\n                })\n                .attr(\"y\", function(d) {\n                    return yScale(d.data[\"Country/Region\"])\n                }) \n                .attr(\"width\", function(d, i) {\n                    return xScale(d[1]) - xScale(d[0])\n                })\n                .attr(\"height\", yScale.bandwidth())\n                .attr(\"fill\", function(d) {\n                    if (d.key === \"totalDeaths\") {\n                        return \"#bf212e\"; \n                    } else if (d.key === \"totalRecoveries\") {\n                        return \"#27b376\";\n                    }  else {\n                        return \"#264b96\"\n                    }})\n                .on(\"mouseover\", function(d) {\n                    let msg = \"\";\n                    if (d.key === \"casesMinusDeathsAndRecoveries\") {\n                        msg = \"Unresolved Reported Cases\";\n                    } else if (d.key === \"totalDeaths\") {\n                        msg = \"Reported Deaths\";\n                    } else if (d.key === \"totalRecoveries\") {\n                        msg = \"Reported Recoveries\"\n                    }\n                    return tooltip.style(\"visibility\", \"visible\").text(`${msg}: ${d.data[d.key]}`)\n                })\n                .on(\"mousemove\", function (d) {\n                    let msg = \"\";\n                    if (d.key === \"casesMinusDeathsAndRecoveries\") {\n                        msg = \"Unresolved Reported Cases\";\n                    } else if (d.key === \"totalDeaths\") {\n                        msg = \"Reported Deaths\";\n                    } else if (d.key === \"totalRecoveries\") {\n                        msg = \"Reported Recoveries\"\n                    }\n                    return tooltip.style(\"top\", (d3.event.pageY - 10) + \"px\").style(\"left\", (d3.event.pageX + 10) + \"px\").text(`${msg}: ${thousands_separators(d.data[d.key])}`);\n                })\n                .on(\"mouseout\", function (d) {\n                    return tooltip.style(\"visibility\", \"hidden\");\n                })\n                .on(\"click\", function (d) {\n                    tooltip.style(\"visibility\", \"hidden\");\n                    // alert(\"On March 23, 2020 the Johns Hopkins data set this graph uses was significantly altered and country-specific data on recoveries is not trustworthy enough in my view to show currently.  I am monitoring this dataset daily.  If it becomes more stable and I have enough confidence in it, I will again release the country-specific graph feature.  Thanks - Jesse\")\n                    if (Object.keys(d.data[\"Province/State\"][0]).length === 0) {\n                        alert(\"No state, county, or state-level data currently available for \" + d.data[\"Country/Region\"])\n                    } else {\n                        makeCountryBarChart(d.data[\"Country/Region\"], d.data[\"Province/State\"]);\n                    }\n                })\n\n            \n\n    let xAxis = g => g\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n        .call(d3.axisTop(xScale).ticks(w / 100, \"s\"))\n        .call(g => g.selectAll(\".domain\").remove())\n\n    svg.append(\"g\")\n        .call(xAxis);\n\n    let yAxis = g => g\n        .attr(\"transform\", `translate(${margin.left}, 0)`)\n        .call(d3.axisLeft(yScale).tickSizeOuter(0))\n        .call(g => g.selectAll(\".domain\").remove())\n\n    svg.append(\"g\")\n        .call(yAxis);\n\n}\n","// this file to format the CSV files as needed to render as desired in graphs\n\nimport { getYesterdaysDate, getYesterdaysDateDefault, getTwoDaysAgoDate} from './date_util';\nimport {makeHorzBarGraph} from './horz_bar_graph';\nimport { makeCountryBarChart} from './country_bar_chart';\n\nexport const generateData = (excludeChina = false, date = getYesterdaysDate(), countryName = \"\") => {\n    //  the blacklist accounts for cases that the Johns Hopkins data is formatted in error-inducing way and clearly is a data counting error.  ie - confirmed cases = -1.  Recoveries = undefined, etc.  Better to not report shaky data at all than make assumptions. \n    let blacklist = [\"Cape Verde\", \"Cruise Ship\", \"Kosovo\", \"Diamond Princess\", \"Belize\", \"Laos\", \"Libya\", \"West Bank and Gaza\", \"Guinea-Bissau\", \"Mali\", \"Saint Kitts and Nevis\"]\n\n    let dataMaster = {};\n    d3.csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv')\n        .then(data => { //TOTAL CASES\n            data.forEach(row => {                \n                // ex values (rowCountryRegion):\n                // Thailand  // US  // France\n                let rowCountryRegion = row['Country/Region'];\n                let provinceState = row[\"Province/State\"];\n\n                if (blacklist.includes(rowCountryRegion)) {\n                    // do nothing\n                } else {\n                    if (dataMaster[rowCountryRegion]) {\n                        if (provinceState !== \"\") {\n                            let provinceStateObj = new Object();\n                            Object.assign(provinceStateObj, { provinceState: provinceState, provinceStateCases: parseInt(row[date]) });\n                            dataMaster[rowCountryRegion][\"Province/State\"].push(provinceStateObj);\n                        }\n                        dataMaster[rowCountryRegion][\"Province/State\"][provinceState]\n                        dataMaster[rowCountryRegion].totalCases += parseInt(row[date])\n                    } else {\n                        let provinceStateObj = new Object();\n                        //if row[\"Province/State\"] is \"\", it means that there is no province/state data for that row (and likely thee country is as granular data as we have)\n                        if (provinceState !== \"\") {\n                            Object.assign(provinceStateObj, {provinceState: provinceState, provinceStateCases: parseInt(row[date])});\n                        }\n\n                        dataMaster[rowCountryRegion] = { \n                            \"Province/State\": [provinceStateObj], \n                            totalCases: parseInt(row[date]), \n                            totalDeaths: undefined, \n                            totalRecoveries: undefined \n                        };\n                    }\n                }\n            })\n        })\n    .then(\n        () => { //DEATHS\n            d3.csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv')\n                .then(data => {\n                    data.forEach(row => {\n                        let rowCountryRegion = row['Country/Region'];\n                        let provinceState = row[\"Province/State\"];\n\n                        if (blacklist.includes(rowCountryRegion)) {\n                            // do nothing\n                        } else {\n                            // set or upatde country-wide numbers\n                            if (dataMaster[rowCountryRegion].totalDeaths) {\n                                //if that country already exists in object\n                                dataMaster[rowCountryRegion].totalDeaths += parseInt(row[date])\n                            } else { \n                                // the first time that country is found in data, create that key in object\n                                dataMaster[rowCountryRegion].totalDeaths = parseInt(row[date]) \n                            }\n\n\n                            // set provinceState array values\n                            if (provinceState !== \"\") {\n                                let provinceStateArr = dataMaster[rowCountryRegion][\"Province/State\"];\n                                for (let index = 0; index < provinceStateArr.length; index++) {\n                                    if (provinceStateArr[index].provinceState === provinceState) {\n                                        let provinceStateObj = provinceStateArr[index];\n                                        Object.assign(provinceStateObj, { provinceStateDeaths: parseInt(row[date]) });\n                                    }\n                                }\n                            }\n                        }\n                    })\n                })\n        }\n    )\n    .then(() => { // RECOVERED\n        d3.csv('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv')\n            .then(data => {\n                data.forEach(row => {\n                    let rowCountryRegion = row['Country/Region'];\n                    let provinceState = row[\"Province/State\"];\n\n                    // set or upatde country-wide numbers\n                    if (blacklist.includes(rowCountryRegion)) {\n                        // do nothing\n                    } else {\n                        if (dataMaster[rowCountryRegion].totalRecoveries) {\n                            dataMaster[rowCountryRegion].totalRecoveries += parseInt(row[date])\n                        } else {\n                            dataMaster[rowCountryRegion].totalRecoveries = parseInt(row[date]) \n                        };\n\n                        // set provinceState array values\n                        if (provinceState !== \"\") {\n                            let provinceStateArr = dataMaster[rowCountryRegion][\"Province/State\"];\n                            for (let index = 0; index < provinceStateArr.length; index++) {\n                                if (provinceStateArr[index].provinceState === provinceState) {\n                                    let provinceStateObj = provinceStateArr[index];\n                                    Object.assign(provinceStateObj, { provinceStateRecoveries: parseInt(row[date]) });\n                                }\n                            }\n                        }\n                    }\n                })\n\n                // a heading that updates w the selected date displayed to user\n                let title = document.getElementById(\"asOfTitle\")\n                \n                title.innerHTML = `As of ${date}`;\n\n                let paramCountry = window.location.search.slice(window.location.search.indexOf(\"=\") + 1);\n\n                if (dataMaster[\"China\"].totalDeaths) {\n                    if (countryName === \"\" && paramCountry === \"\") {\n                        makeHorzBarGraph(dataMaster, excludeChina);\n                    } else {\n                        if (paramCountry !== \"\") {\n                            makeCountryBarChart(paramCountry, dataMaster[paramCountry][\"Province/State\"])\n                        } else {\n                            makeCountryBarChart(countryName, dataMaster[countryName][\"Province/State\"])\n                        }\n                    }\n                } else {\n                    // something to investigate later - why sometimes not all data is there.  Related likely to syncronicity.  Temporary fix: call function generateData again.\n                    generateData(excludeChina, date, countryName);\n                }\n            })\n        }\n    )\n}\n\n\n\n\n\n\n","import \"./styles/index.scss\";\nimport { getYesterdaysDate, getDate, getYesterdaysDateDefault, getTwoDaysAgoDate, getTwoDaysAgoDateDefault} from './scripts/date_util';\n// import {makeBarChart} from './scripts/d3_bar_chart';\n// import { makeHorzBarChart} from './scripts/stacked_horz_bar_chart';\n// import { makeHorzBarGraph} from './scripts/horz_bar_graph';\nimport { generateData} from './scripts/data_manipulation';\n\nfunction handleClick(checkbox) {\n    let excludeChina;\n    if (checkbox.checked) {\n        excludeChina = true;\n    } else {\n        excludeChina = false;\n    }\n\n    const calendarInput = document.getElementById(\"calendarInput\");\n    let date = getDate(calendarInput.value);\n    let yesterday = getYesterdaysDate();\n    let twoDaysAgo = getTwoDaysAgoDate();\n    // this conditional protects against buggy date renderings if the user forces the day with the arrow keys above yesterdays date\n\n    // updated on March 26 2020 to swap yesterday with twoDaysAgo as Johns Hopkins data recency seems to have shifted\n    // if (((yesterday.split(\"/\")[0] <= date.split(\"/\")[0]) && (yesterday.split(\"/\")[1]) < parseInt(date.split(\"/\")[1])) || date < \"1/22/20\") {\n    if (((yesterday.split(\"/\")[0] <= date.split(\"/\")[0]) && (yesterday.split(\"/\")[1]) < parseInt(date.split(\"/\")[1])) || date < \"1/22/20\") {\n        date = yesterday;\n    }\n    if (date.length === 0) {\n        generateData(excludeChina);\n    } else {\n        generateData(excludeChina, date); \n    }\n    \n}\n\nfunction handleCalendar(calendar) {\n    let date = getDate(calendar.value);\n    let excludeChina;\n    const chinaCheckbox = document.getElementById(\"chinaCheckbox\");\n    if (chinaCheckbox.checked) {\n        excludeChina = true;\n    } else {\n        excludeChina = false;\n    }\n\n    let yesterday = getYesterdaysDate();\n    let twoDaysAgo = getTwoDaysAgoDate();\n    // this conditional protects against buggy date renderings if the user forces the day with the arrow keys above yesterdays date\n    if (((yesterday.split(\"/\")[0] <= date.split(\"/\")[0]) && (yesterday.split(\"/\")[1]) < parseInt(date.split(\"/\")[1])) || date < \"1/22/20\") {\n        date = yesterday;\n        alert(\"Valid dates are between 1/22/2020\" + \" and \" + yesterday + \"20.  Showing default: \" + yesterday + \"20.\")\n    }\n\n    const graphTitle = document.getElementById(\"graphTitle\");\n    if (graphTitle.innerHTML !== \"Global\") {\n        generateData(excludeChina, date, graphTitle.innerHTML);\n    } else {\n        generateData(excludeChina, date);\n    }\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    const card = document.createElement(\"div\");\n    card.classList.add(\"card\", \"center\");\n    // card.innerHTML = `<h2>As of ${getYesterdaysDate()}</h2>`;\n    document.body.append(card);\n\n    const chinaCheckbox = document.getElementById(\"chinaCheckbox\");\n    chinaCheckbox.addEventListener(\"click\", () => {\n        handleClick(chinaCheckbox);\n    })\n\n    const calendarInput = document.getElementById(\"calendarInput\");\n    calendarInput.defaultValue = getYesterdaysDateDefault();\n\n    const countriesButton = document.getElementById(\"backToCountries\")\n    countriesButton.addEventListener(\"click\", () => {\n        let excludeChina;\n        if (chinaCheckbox.checked) {\n            excludeChina = true;\n        } else {\n            excludeChina = false;\n        }\n\n        // this resets the URL path\n        window.location.search = \"\";\n\n        let date = getDate(calendarInput.value);\n        let yesterday = getYesterdaysDate()\n        let twoDaysAgo = getTwoDaysAgoDate();\n        // this conditional protects against buggy date renderings if the user forces the day with the arrow keys above yesterdays date\n        if (((twoDaysAgo.split(\"/\")[0] <= date.split(\"/\")[0]) && (twoDaysAgo.split(\"/\")[1]) < parseInt(date.split(\"/\")[1])) || date < \"1/22/20\") {\n            date = twoDaysAgo;\n            calendarInput.value = getTwoDaysAgoDateDefault();\n        }\n\n        generateData(excludeChina, date);\n    })\n\n\n    calendarInput.addEventListener(\"change\", () => {\n        handleCalendar(calendarInput);\n    })\n\n    generateData();\n});"],"sourceRoot":""}